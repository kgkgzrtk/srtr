!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CNT_MAX	main.c	9;"	d	file:
C_MAX	srtr.c	8;"	d	file:
I_MAX	srtr.c	9;"	d	file:
KEY_MAX	srtr.c	10;"	d	file:
checkStyle	shiritori-b.c	/^int checkStyle(int *h, int size){$/;"	f
checkStyle	shiritori.c	/^int checkStyle(int *h, int size){$/;"	f
checkStyle	srtr.c	/^int checkStyle(int *h, int size){$/;"	f
endflag	main.c	/^int endflag=0;$/;"	v
hirar	shiritori-b.c	/^typedef unsigned char hirar[4];$/;"	t	file:
hirar	shiritori.c	/^typedef unsigned char hirar[4];$/;"	t	file:
idList	shiritori-b.c	/^int** idList;$/;"	v
idList	shiritori.c	/^int** idList;$/;"	v
init_randd	srtr.c	/^int init_randd(){$/;"	f
input_file	shiritori-b.c	/^int input_file(char *fname,int** s){$/;"	f
input_file	shiritori.c	/^int input_file(char *fname,int** s){$/;"	f
input_file	srtr.c	/^int input_file(char *fname,int** s){$/;"	f
input_word	shiritori-b.c	/^int input_word(int *list, int *val){$/;"	f
input_word	shiritori.c	/^int input_word(int *list, int *val){$/;"	f
input_word	srtr.c	/^int input_word(char *s, int *list){$/;"	f
intcmp	srtr.c	/^int intcmp(int *a, int *b){$/;"	f
intcpy	srtr.c	/^int intcpy(int *a, int *b){$/;"	f
itos	shiritori-b.c	/^int itos(int *h, unsigned char *a, int size){$/;"	f
itos	shiritori.c	/^int itos(int *h, unsigned char *a, int size){$/;"	f
itos	srtr.c	/^int itos(int *h, unsigned char *a){$/;"	f
keyList	shiritori-b.c	/^int** keyList;$/;"	v
keyList	shiritori.c	/^int** keyList;$/;"	v
main	hira_test.c	/^int main(){$/;"	f
main	main.c	/^int main(){$/;"	f
main	shiritori-b.c	/^int main(){$/;"	f
main	shiritori.c	/^int main(){$/;"	f
match_id	srtr.c	/^int match_id(int *pre_str, int *str){$/;"	f
mutex	main.c	/^pthread_mutex_t mutex;$/;"	v
randd	srtr.c	/^int randd(int min, int max){$/;"	f
searchid	srtr.c	/^int searchid(int *h, int **list){$/;"	f
sleep	shiritori-b.c	7;"	d	file:
sleep	shiritori.c	7;"	d	file:
srtr_ai	srtr.c	/^int srtr_ai(int *pre_str, int **keyList, int **idList, int lv, int *p){$/;"	f
stoCode	srtr.c	/^int stoCode(unsigned char *s, int *h){$/;"	f
stoi	shiritori-b.c	/^int stoi(unsigned char *a, int *h){$/;"	f
stoi	shiritori.c	/^int stoi(unsigned char *a, int *h){$/;"	f
thread	main.c	/^void* thread(void* args){$/;"	f
tocode	srtr.c	/^int tocode(int h){$/;"	f
toid	shiritori-b.c	/^int toid(int h){$/;"	f
toid	shiritori.c	/^int toid(int h){$/;"	f
toid	srtr.c	/^int toid(int h){$/;"	f
tostr	shiritori-b.c	/^int tostr(int h){$/;"	f
tostr	shiritori.c	/^int tostr(int h){$/;"	f
